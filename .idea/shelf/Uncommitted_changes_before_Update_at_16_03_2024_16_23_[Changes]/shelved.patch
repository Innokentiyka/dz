Index: homework/users/tests.py
===================================================================
diff --git a/homework/users/tests.py b/homework/users/tests.py
deleted file mode 100644
--- a/homework/users/tests.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
Index: homework/users/serializers.py
===================================================================
diff --git a/homework/users/serializers.py b/homework/users/serializers.py
deleted file mode 100644
--- a/homework/users/serializers.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,28 +0,0 @@
-from .models import Payment
-from django.contrib.auth import get_user_model
-from rest_framework import serializers
-from .models import Course
-
-class PaymentSerializer(serializers.ModelSerializer):
-    class Meta:
-        model = Payment
-        fields = '__all__'
-
-
-User = get_user_model()
-
-class UserSerializer(serializers.ModelSerializer):
-    class Meta:
-        model = User
-        fields = ('id', 'username', 'email', 'password', 'phone', 'city', 'avatar')
-        extra_kwargs = {'password': {'write_only': True}}
-
-    def create(self, validated_data):
-        user = User.objects.create_user(**validated_data)
-        return user
-
-
-class CourseSerializer(serializers.ModelSerializer):
-    class Meta:
-        model = Course
-        fields = ['id', 'title', 'description', 'created_at']
\ No newline at end of file
Index: homework/users/apps.py
===================================================================
diff --git a/homework/users/apps.py b/homework/users/apps.py
deleted file mode 100644
--- a/homework/users/apps.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,6 +0,0 @@
-from django.apps import AppConfig
-
-
-class UsersConfig(AppConfig):
-    default_auto_field = 'django.db.models.BigAutoField'
-    name = 'users'
Index: homework/homework/urls.py
===================================================================
diff --git a/homework/homework/urls.py b/homework/homework/urls.py
deleted file mode 100644
--- a/homework/homework/urls.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,36 +0,0 @@
-"""
-URL configuration for homework project.
-
-The `urlpatterns` list routes URLs to views. For more information please see:
-    https://docs.djangoproject.com/en/5.0/topics/http/urls/
-Examples:
-Function views
-    1. Add an import:  from my_app import views
-    2. Add a URL to urlpatterns:  path('', views.home, name='home')
-Class-based views
-    1. Add an import:  from other_app.views import Home
-    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
-Including another URLconf
-    1. Import the include() function: from django.urls import include, path
-    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
-"""
-from django.contrib import admin
-from django.urls import path, include
-from rest_framework_simplejwt.views import (
-         TokenObtainPairView,
-         TokenRefreshView,
-     )
-from homework.users.views import CreateUserView
-
-
-urlpatterns = [
-    path('admin/', admin.site.urls),
-    path('api/', include('lms.urls')),
-    path('api/token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),
-    path('api/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),
-    path('register/', CreateUserView.as_view(), name='user_register'),
-    path('api/token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),
-    path('api/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),
-    path('api/users/', include('users.urls'))
-
-]
Index: homework/users/permissions.py
===================================================================
diff --git a/homework/users/permissions.py b/homework/users/permissions.py
deleted file mode 100644
--- a/homework/users/permissions.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,8 +0,0 @@
-from rest_framework import permissions
-
-class IsOwnerOrReadOnly(permissions.BasePermission):
-
-    def has_object_permission(self, request, view, obj):
-        if request.method in permissions.SAFE_METHODS:
-            return True
-        return obj.owner == request.user
\ No newline at end of file
Index: homework/homework/asgi.py
===================================================================
diff --git a/homework/homework/asgi.py b/homework/homework/asgi.py
deleted file mode 100644
--- a/homework/homework/asgi.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,16 +0,0 @@
-"""
-ASGI config for homework project.
-
-It exposes the ASGI callable as a module-level variable named ``application``.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/5.0/howto/deployment/asgi/
-"""
-
-import os
-
-from django.core.asgi import get_asgi_application
-
-os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'homework.settings')
-
-application = get_asgi_application()
Index: requirements.txt
===================================================================
diff --git a/requirements.txt b/requirements.txt
deleted file mode 100644
--- a/requirements.txt	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,3 +0,0 @@
-Django==3.2.8
-djangorestframework==3.12.4
-django-filter==2.4.0
\ No newline at end of file
Index: homework/lms/apps.py
===================================================================
diff --git a/homework/lms/apps.py b/homework/lms/apps.py
deleted file mode 100644
--- a/homework/lms/apps.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,6 +0,0 @@
-from django.apps import AppConfig
-
-
-class LmsConfig(AppConfig):
-    default_auto_field = 'django.db.models.BigAutoField'
-    name = 'lms'
Index: homework/lms/urls.py
===================================================================
diff --git a/homework/lms/urls.py b/homework/lms/urls.py
deleted file mode 100644
--- a/homework/lms/urls.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,12 +0,0 @@
-from django.urls import path, include
-from rest_framework.routers import DefaultRouter
-from .views import CourseViewSet, LessonListCreate, LessonRetrieveUpdateDestroy
-
-router = DefaultRouter()
-router.register(r'courses', CourseViewSet)
-
-urlpatterns = [
-       path('', include(router.urls)),
-       path('lessons/', LessonListCreate.as_view()),
-       path('lessons/<int:pk>/', LessonRetrieveUpdateDestroy.as_view()),
-   ]
\ No newline at end of file
Index: homework/lms/serializers.py
===================================================================
diff --git a/homework/lms/serializers.py b/homework/lms/serializers.py
deleted file mode 100644
--- a/homework/lms/serializers.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,42 +0,0 @@
-from .models import Lesson
-from rest_framework import serializers
-from .models import Course
-
-
-class CourseSerializer(serializers.ModelSerializer):
-    class Meta:
-        model = Course
-        fields = '__all__'
-
-
-class LessonSerializer(serializers.ModelSerializer):
-    class Meta:
-        model = Lesson
-        fields = '__all__'
-
-
-class CourseSerializer(serializers.ModelSerializer):
-    lessons_count = serializers.SerializerMethodField()
-
-    class Meta:
-        model = Course
-        fields = ['id', 'title', 'preview', 'description', 'lessons_count']
-
-    def get_lessons_count(self, obj):
-        return obj.lessons.count()
-
-class LessonSerializer(serializers.ModelSerializer):
-    class Meta:
-        model = Lesson
-        fields = ['id', 'title', 'description', 'preview', 'video_url']
-
-class CourseSerializer(serializers.ModelSerializer):
-    lessons_count = serializers.SerializerMethodField()
-    lessons = LessonSerializer(many=True, read_only=True, source='lessons_set')
-
-    class Meta:
-        model = Course
-        fields = ['id', 'title', 'preview', 'description', 'lessons_count', 'lessons']
-
-    def get_lessons_count(self, obj):
-        return obj.lessons.count()
\ No newline at end of file
Index: homework/lms/models.py
===================================================================
diff --git a/homework/lms/models.py b/homework/lms/models.py
deleted file mode 100644
--- a/homework/lms/models.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,15 +0,0 @@
-from django.db import models
-
-
-class Course(models.Model):
-    title = models.CharField(max_length=255)
-    preview = models.ImageField(upload_to='courses_previews/')
-    description = models.TextField()
-
-
-class Lesson(models.Model):
-    course = models.ForeignKey(Course, related_name='lessons', on_delete=models.CASCADE)
-    title = models.CharField(max_length=255)
-    description = models.TextField()
-    preview = models.ImageField(upload_to='lessons_previews/')
-    video_url = models.URLField()
\ No newline at end of file
Index: homework/users/admin.py
===================================================================
diff --git a/homework/users/admin.py b/homework/users/admin.py
deleted file mode 100644
--- a/homework/users/admin.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,7 +0,0 @@
-from django.contrib import admin
-from .models import CustomUser
-
-@admin.register(CustomUser)
-class CustomUserAdmin(admin.ModelAdmin):
-         list_display = ['email', 'phone', 'city', 'avatar']
-
Index: homework/manage.py
===================================================================
diff --git a/homework/manage.py b/homework/manage.py
deleted file mode 100644
--- a/homework/manage.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,22 +0,0 @@
-#!/usr/bin/env python
-"""Django's command-line utility for administrative tasks."""
-import os
-import sys
-
-
-def main():
-    """Run administrative tasks."""
-    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'homework.settings')
-    try:
-        from django.core.management import execute_from_command_line
-    except ImportError as exc:
-        raise ImportError(
-            "Couldn't import Django. Are you sure it's installed and "
-            "available on your PYTHONPATH environment variable? Did you "
-            "forget to activate a virtual environment?"
-        ) from exc
-    execute_from_command_line(sys.argv)
-
-
-if __name__ == '__main__':
-    main()
Index: homework/users/models.py
===================================================================
diff --git a/homework/users/models.py b/homework/users/models.py
deleted file mode 100644
--- a/homework/users/models.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,33 +0,0 @@
-from django.contrib.auth.models import AbstractUser
-from django.db import models
-from django.conf import settings
-from homework.lms.models import Course, Lesson
-
-
-class CustomUser(AbstractUser):
-    email = models.EmailField(unique=True)
-    phone = models.CharField(max_length=20)
-    city = models.CharField(max_length=100)
-    avatar = models.ImageField(upload_to='avatars/')
-
-    USERNAME_FIELD = 'email'
-    REQUIRED_FIELDS = ['username']
-
-
-class Payment(models.Model):
-    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
-    payment_date = models.DateTimeField(auto_now_add=True)
-    course = models.ForeignKey(Course, on_delete=models.SET_NULL, null=True, blank=True)
-    lesson = models.ForeignKey(Lesson, on_delete=models.SET_NULL, null=True, blank=True)
-    amount = models.DecimalField(max_digits=10, decimal_places=2)
-    payment_method = models.CharField(max_length=20, choices=(('cash', 'Cash'), ('transfer', 'Transfer')))
-
-    class Meta:
-        verbose_name = 'Payment'
-        verbose_name_plural = 'Payments'
-
-
-class Course(models.Model):
-    title = models.CharField(max_length=255)
-    description = models.TextField()
-    created_at = models.DateTimeField(auto_now_add=True)
\ No newline at end of file
Index: homework/lms/admin.py
===================================================================
diff --git a/homework/lms/admin.py b/homework/lms/admin.py
deleted file mode 100644
--- a/homework/lms/admin.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,10 +0,0 @@
-from django.contrib import admin
-from .models import Course, Lesson
-
-@admin.register(Course)
-class CourseAdmin(admin.ModelAdmin):
-    list_display = ['title', 'description', 'preview']
-
-@admin.register(Lesson)
-class LessonAdmin(admin.ModelAdmin):
-    list_display = ['title', 'course', 'description', 'preview', 'video_url']
\ No newline at end of file
Index: homework/lms/views.py
===================================================================
diff --git a/homework/lms/views.py b/homework/lms/views.py
deleted file mode 100644
--- a/homework/lms/views.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,18 +0,0 @@
-from rest_framework import viewsets, generics
-from .models import Course, Lesson
-from .serializers import CourseSerializer, LessonSerializer
-
-
-class CourseViewSet(viewsets.ModelViewSet):
-       queryset = Course.objects.all()
-       serializer_class = CourseSerializer
-
-
-class LessonListCreate(generics.ListCreateAPIView):
-       queryset = Lesson.objects.all()
-       serializer_class = LessonSerializer
-
-
-class LessonRetrieveUpdateDestroy(generics.RetrieveUpdateDestroyAPIView):
-       queryset = Lesson.objects.all()
-       serializer_class = LessonSerializer
\ No newline at end of file
Index: homework/homework/wsgi.py
===================================================================
diff --git a/homework/homework/wsgi.py b/homework/homework/wsgi.py
deleted file mode 100644
--- a/homework/homework/wsgi.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,16 +0,0 @@
-"""
-WSGI config for homework project.
-
-It exposes the WSGI callable as a module-level variable named ``application``.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/5.0/howto/deployment/wsgi/
-"""
-
-import os
-
-from django.core.wsgi import get_wsgi_application
-
-os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'homework.settings')
-
-application = get_wsgi_application()
Index: homework/users/views.py
===================================================================
diff --git a/homework/users/views.py b/homework/users/views.py
deleted file mode 100644
--- a/homework/users/views.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,36 +0,0 @@
-from rest_framework import  filters
-from django_filters.rest_framework import DjangoFilterBackend
-from .models import Payment
-from .serializers import PaymentSerializer
-from .permissions import IsOwnerOrReadOnly
-from rest_framework import viewsets
-from rest_framework import permissions
-from .models import Course
-from .serializers import CourseSerializer
-from django.contrib.auth import get_user_model
-from rest_framework import generics
-from .serializers import UserSerializer
-
-
-class PaymentViewSet(viewsets.ModelViewSet):
-    queryset = Payment.objects.all()
-    serializer_class = PaymentSerializer
-    filter_backends = (DjangoFilterBackend, filters.OrderingFilter,)
-    filterset_fields = ['course', 'lesson', 'payment_method']
-    ordering_fields = ['payment_date']
-
-
-class CourseViewSet(viewsets.ModelViewSet):
-    queryset = Course.objects.all()
-    serializer_class = CourseSerializer
-    permission_classes = [permissions.IsAuthenticatedOrReadOnly, IsOwnerOrReadOnly]
-
-    def perform_create(self, serializer):
-        serializer.save(owner=self.request.user)
-
-
-class CreateUserView(generics.CreateAPIView):
-    model = get_user_model()
-    serializer_class = UserSerializer
-    # Разрешаем доступ неаутентифицированным пользователям
-    permission_classes = ()
\ No newline at end of file
Index: homework/users/fixtures/payments.json
===================================================================
diff --git a/homework/users/fixtures/payments.json b/homework/users/fixtures/payments.json
deleted file mode 100644
--- a/homework/users/fixtures/payments.json	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,14 +0,0 @@
- [
-       {
-           "model": "users.payment",
-           "pk": 1,
-           "fields": {
-               "user": 1,
-               "payment_date": "2024-03-15T12:00:00Z",
-               "course": 1,
-               "lesson": null,
-               "amount": "100.00",
-               "payment_method": "transfer"
-           }
-       }
-   ]
Index: homework/homework/settings.py
===================================================================
diff --git a/homework/homework/settings.py b/homework/homework/settings.py
deleted file mode 100644
--- a/homework/homework/settings.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,132 +0,0 @@
-"""
-Django settings for homework project.
-
-Generated by 'django-admin startproject' using Django 5.0.2.
-
-For more information on this file, see
-https://docs.djangoproject.com/en/5.0/topics/settings/
-
-For the full list of settings and their values, see
-https://docs.djangoproject.com/en/5.0/ref/settings/
-"""
-import os
-from pathlib import Path
-
-# Build paths inside the project like this: BASE_DIR / 'subdir'.
-BASE_DIR = Path(__file__).resolve().parent.parent
-
-# Quick-start development settings - unsuitable for production
-# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/
-
-# SECURITY WARNING: keep the secret key used in production secret!
-SECRET_KEY = 'django-insecure-%uffw56rtlo!n&edokvv9*t8jx!nna3nl$e+qlpj1$0qnyt64v'
-
-# SECURITY WARNING: don't run with debug turned on in production!
-DEBUG = True
-
-ALLOWED_HOSTS = []
-
-# Application definition
-
-INSTALLED_APPS = [
-    'django.contrib.admin',
-    'django.contrib.auth',
-    'django.contrib.contenttypes',
-    'django.contrib.sessions',
-    'django.contrib.messages',
-    'django.contrib.staticfiles',
-    'rest_framework'
-    'django_filters'
-    'rest_framework',
-]
-
-MIDDLEWARE = [
-    'django.middleware.security.SecurityMiddleware',
-    'django.contrib.sessions.middleware.SessionMiddleware',
-    'django.middleware.common.CommonMiddleware',
-    'django.middleware.csrf.CsrfViewMiddleware',
-    'django.contrib.auth.middleware.AuthenticationMiddleware',
-    'django.contrib.messages.middleware.MessageMiddleware',
-    'django.middleware.clickjacking.XFrameOptionsMiddleware',
-]
-
-ROOT_URLCONF = 'homework.urls'
-
-TEMPLATES = [
-    {
-        'BACKEND': 'django.template.backends.django.DjangoTemplates',
-        'DIRS': [],
-        'APP_DIRS': True,
-        'OPTIONS': {
-            'context_processors': [
-                'django.template.context_processors.debug',
-                'django.template.context_processors.request',
-                'django.contrib.auth.context_processors.auth',
-                'django.contrib.messages.context_processors.messages',
-            ],
-        },
-    },
-]
-
-WSGI_APPLICATION = 'homework.wsgi.application'
-
-# Database
-# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
-
-DATABASES = {
-    'default': {
-        'ENGINE': 'django.db.backends.sqlite3',
-        'NAME': BASE_DIR / 'db.sqlite3',
-    }
-}
-
-# Password validation
-# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators
-
-AUTH_PASSWORD_VALIDATORS = [
-    {
-        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
-    },
-    {
-        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
-    },
-]
-REST_FRAMEWORK = {
-
-    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
-
-    'DEFAULT_AUTHENTICATION_CLASSES': (
-           'rest_framework_simplejwt.authentication.JWTAuthentication',
-       ),
-       'DEFAULT_PERMISSION_CLASSES': (
-           'rest_framework.permissions.IsAuthenticated',
-       ),
-    }
-# Internationalization
-# https://docs.djangoproject.com/en/5.0/topics/i18n/
-
-LANGUAGE_CODE = 'en-us'
-
-TIME_ZONE = 'UTC'
-
-USE_I18N = True
-
-USE_TZ = True
-
-# Static files (CSS, JavaScript, Images)
-# https://docs.djangoproject.com/en/5.0/howto/static-files/
-
-STATIC_URL = 'static/'
-
-# Default primary key field type
-# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field
-
-DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
-MEDIA_URL = '/media/'
-MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
Index: homework/.gitignore
===================================================================
diff --git a/homework/.gitignore b/homework/.gitignore
deleted file mode 100644
--- a/homework/.gitignore	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,138 +0,0 @@
-# Byte-compiled / optimized / DLL files
-__pycache__/
-*.py[cod]
-*$py.class
-
-# C extensions
-*.so
-
-# Distribution / packaging
-.Python
-env/
-build/
-develop-eggs/
-dist/
-downloads/
-eggs/
-.eggs/
-lib/
-lib64/
-parts/
-sdist/
-var/
-wheels/
-pip-wheel-metadata/
-share/python-wheels/
-*.egg-info/
-.installed.cfg
-*.egg
-MANIFEST
-
-# PyInstaller
-# Usually these files are written by a python script from a template
-# before PyInstaller builds the exe, so as to inject date/other infos into it.
-*.manifest
-*.spec
-
-# Installer logs
-pip-log.txt
-pip-delete-this-directory.txt
-
-# Unit test / coverage reports
-htmlcov/
-.tox/
-.nox/
-.coverage
-.coverage.*
-.cache
-nosetests.xml
-coverage.xml
-*.cover
-*.py,cover
-.hypothesis/
-.pytest_cache/
-cover/
-
-# Translations
-*.mo
-*.pot
-
-# Django stuff:
-*.log
-local_settings.py
-db.sqlite3
-db.sqlite3-journal
-media/
-
-# Flask stuff:
-instance/
-.webassets-cache
-
-# Scrapy stuff:
-.scrapy.cfg
-
-# Sphinx documentation
-docs/_build/
-
-# PyBuilder
-target/
-
-# Jupyter Notebook
-.ipynb_checkpoints
-
-# IPython
-profile_default/
-ipython_config.py
-
-# pyenv
-.python-version
-
-# pipenv
-#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
-#   However, in case of collaboration, if having platform-specific dependencies or dependencies
-#   having no cross-platform support, pipenv may install dependencies that don't work, or not
-#   install all needed dependencies.
-#Pipfile.lock
-
-# PEP 582; used by e.g. github.com/David-OConnor/pyflow
-__pypackages__/
-
-# Celery stuff
-celerybeat-schedule
-celerybeat.pid
-
-# SageMath parsed files
-*.sage.py
-
-# Environments
-.venv
-venv/
-ENV/
-
-# Spyder project settings
-.spyderproject
-.spyproject
-
-# Rope project settings
-.ropeproject
-
-# mkdocs documentation
-/site
-
-# mypy
-.mypy_cache/
-.dmypy.json
-dmypy.json
-
-# Pyre type checker
-.pyre/
-
-# pytype static type analyzer
-.pytype/
-
-# Cython debug symbols
-cython_debug/
-
-# dotenv environment variables file
-.env
-.env.local
Index: homework/lms/tests.py
===================================================================
diff --git a/homework/lms/tests.py b/homework/lms/tests.py
deleted file mode 100644
--- a/homework/lms/tests.py	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
+++ /dev/null	(revision 12d6fc8f6c972602c6f78453bcfb041fc3407f6e)
@@ -1,2 +0,0 @@
-
-
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
new file mode 100644
--- /dev/null	(date 1710595334197)
+++ b/README.md	(date 1710595334197)
@@ -0,0 +1,1 @@
+# Homework1
\ No newline at end of file
diff --git a/homework/lms/migrations/__init__.py b/homework/lms/migrations/__init__.py
deleted file mode 100644
diff --git a/homework/users/migrations/__init__.py b/homework/users/migrations/__init__.py
deleted file mode 100644
diff --git a/homework/users/__init__.py b/homework/users/__init__.py
deleted file mode 100644
diff --git a/homework/lms/__init__.py b/homework/lms/__init__.py
deleted file mode 100644
diff --git a/homework/homework/__init__.py b/homework/homework/__init__.py
deleted file mode 100644
